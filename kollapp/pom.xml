<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>gr2409</groupId>
    <artifactId>kollapp</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <!-- Encoding and Java version properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
        
        <!-- Centralized dependency versions -->
        <javafx.version>17.0.12</javafx.version>
        <junit.version>5.10.0</junit.version>
        <testfx.version>4.0.16-alpha</testfx.version>
        <hamcrest.version>2.2</hamcrest.version>

    </properties>

    <profiles>
        <profile>
            <id>skip-ui-tests</id>
            <activation>
                <property>
                    <name>skipUITests</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <!-- Pattern to exclude UI tests -->
                <uiTestExcludePattern>**/ui/**/*Test.java</uiTestExcludePattern>
            </properties>
        </profile>
    </profiles>

    <!-- Centralized dependency management -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>gr2409</groupId>
                <artifactId>core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>gr2409</groupId>
                <artifactId>persistence</artifactId>
                <version>${project.version}</version>
            </dependency>
                <dependency>
                <groupId>gr2409</groupId>
                <artifactId>api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <!-- JavaFX dependencies -->
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-controls</artifactId>
                <version>${javafx.version}</version>
            </dependency>
            <dependency>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-fxml</artifactId>
                <version>${javafx.version}</version>
            </dependency>

            <!-- JUnit dependencies -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- TestFX dependencies -->
            <dependency>
                <groupId>org.testfx</groupId>
                <artifactId>testfx-core</artifactId>
                <version>${testfx.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.testfx</groupId>
                <artifactId>testfx-junit5</artifactId>
                <version>${testfx.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Hamcrest -->
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Mockito -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>5.0.0</version>
                <scope>test</scope>
            </dependency>

            <!-- Mockito Inline for static methods -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-inline</artifactId>
                <version>5.0.0</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- JaCoCo plugin -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.10</version>
                <executions>
                    <!-- Prepare agent across all modules -->
                    <execution>
                        <id>jacoco-prepare-agent</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                            <id>jacoco-report</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                </executions>
            </plugin>
            <!-- Compiler plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <!-- 
                        <argLine>dash dash enable-preview</argLine>
                    -->
                </configuration>
            </plugin>

            <!-- Surefire plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <argLine>-javaagent:${settings.localRepository}/org/jacoco/org.jacoco.agent/0.8.10/org.jacoco.agent-0.8.10-runtime.jar=destfile=${project.build.directory}/jacoco.exec,append=true</argLine>
                    <!-- Ensure JavaFX internal modules are accessible -->
                    <argLine>${argLine} --add-opens javafx.graphics/com.sun.javafx.application=ALL-UNNAMED 
                            --add-opens javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED 
                            --add-opens javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED
                            --add-opens javafx.base/com.sun.javafx.collections=ALL-UNNAMED</argLine>
                </configuration>
            </plugin>

            <!-- SpotBugs Plugin -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>4.7.3.0</version>
                <executions>
                    <execution>
                        <id>individual-spotbugs-report</id>
                        <goals>
                            <goal>spotbugs</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <outputDirectory>${project.build.directory}/spotbugs</outputDirectory>
                </configuration>
            </plugin>
        

            <!-- Checkstyle plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>false</failsOnError>  <!-- Do not fail the build -->
                    <excludes>**/module-info.java</excludes>
                </configuration>
            </plugin>

            <build>
    <plugins>
        <!-- First, add this plugin to prepare the package directory -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals>
                        <goal>run</goal>
                    </goals>
                    <configuration>
                        <target>
                            <mkdir dir="${project.build.directory}/package"/>
                            <copy file="${project.build.directory}/kollapp-full.jar" todir="${project.build.directory}/package"/>
                            <copy file="${project.basedir}/start_app.sh" todir="${project.build.directory}/package"/>
                        </target>
                    </configuration>
                </execution>
            </executions>
        </plugin>

        <!-- Your existing shade plugin -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-shade-plugin</artifactId>
            <version>3.5.0</version>
            <executions>
                <execution>
                    <phase>package</phase>
                    <goals>
                        <goal>shade</goal>
                    </goals>
                    <configuration>
                        <finalName>kollapp-full</finalName>
                        <transformers>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                <mainClass>ui.KollApp</mainClass>
                            </transformer>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                <resource>META-INF/spring.handlers</resource>
                            </transformer>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                <resource>META-INF/spring.schemas</resource>
                            </transformer>
                        </transformers>
                    </configuration>
                </execution>
            </executions>
        </plugin>

        <!-- Update your jpackage plugin configuration -->
        <plugin>
            <groupId>org.panteleyev</groupId>
            <artifactId>jpackage-maven-plugin</artifactId>
            <version>1.4.0</version>
            <configuration>
                <name>KollApp</name>
                <appVersion>1.0.0</appVersion>
                <vendor>gr2409</vendor>
                <type>APP_IMAGE</type>
                <runtimeImage>custom-runtime</runtimeImage>
                <input>${project.build.directory}/package</input>
                <destination>target/dist</destination>
                <mainClass>ui.KollApp</mainClass>
                <mainJar>kollapp-full.jar</mainJar>
                <javaOptions>
                    <option>--add-opens</option>
                    <option>javafx.graphics/com.sun.javafx.application=ALL-UNNAMED</option>
                    <option>--add-opens</option>
                    <option>javafx.controls/com.sun.javafx.scene.control=ALL-UNNAMED</option>
                    <option>--add-opens</option>
                    <option>javafx.graphics/com.sun.javafx.stage=ALL-UNNAMED</option>
                    <option>--add-opens</option>
                    <option>javafx.base/com.sun.javafx.collections=ALL-UNNAMED</option>
                </javaOptions>
            </configuration>
        </plugin>
    </plugins>
</build>
        </plugins>
    </build>

    <modules>
        <module>api</module>
        <module>core</module>
        <module>persistence</module>
        <module>ui</module>
        <module>report-aggregate</module>
    </modules>
</project>
