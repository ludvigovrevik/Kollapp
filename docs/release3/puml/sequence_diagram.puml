@startuml KollApp Sequence Diagram

actor User

' Group components into folders to match the architecture structure
box "UI" #LightBlue
    participant "UI" as UI
    participant "Controller" as Controllers
    participant "Client" as APIHandlers
end box

box "Rest Server" #LightYellow
    participant "Controller" as APIController
    participant "Service" as Services
    participant "Persistence" as Persistence
end box

box "Core" #LightCoral
    participant "Core" as Core
end box

' Define interactions between components
User -> UI : Interacts with UI
UI -> Controllers : Handle user requests
Controllers -> APIHandlers : Delegate logic requests
APIHandlers -> APIController : Send HTTP Requests
APIController -> Services : Call business logic
Services -> Core : Access core classes and logic
Services -> Persistence : Read/Write data
Persistence -> Services : Return data results

Services --> APIController : Return business logic result
APIController --> APIHandlers : HTTP Response
APIHandlers --> Controllers : Return business logic result
Controllers --> UI : Update UI
UI --> User : Display results

@enduml